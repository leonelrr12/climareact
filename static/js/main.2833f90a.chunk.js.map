{"version":3,"sources":["components/Header.js","components/Formulario.js","components/Error.js","components/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buscarClima","e","preventDefault","datos","ciudad","current","value","pais","datosConsulta","currentTarget","reset","state","React","createRef","inherits","createClass","key","onSubmit","ref","id","type","htmlFor","defaultValue","Component","Error","mensaje","Clima","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","muestraResultado","console","log","resultado","_this$props$resultado","name","weather","main","urlIcon","icon","alt","temp","toFixed","src","temp_max","temp_min","App","setState","error","consulta","consultarApi","_this$state$consulta","url","fetch","then","respuesta","json","catch","prevProps","prevState","cod","components_Error","undefined","components_Clima","components_Header","components_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2833f90a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n      <nav>\r\n          <div className=\"nav-wrapper light-blue darken-2\">\r\n            <p className=\"brand-logo\">{props.titulo}</p>\r\n          </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  titulo: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class Formulario extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n        // Crear Ref's\r\n        this.ciudad = React.createRef();\r\n        this.pais = React.createRef();\r\n\r\n    }\r\n    \r\n    buscarClima = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Leer los Ref's y Crear el Objeto\r\n        const datos = {\r\n            ciudad: this.ciudad.current.value,\r\n              pais: this.pais.current.value\r\n        }\r\n\r\n        // Enviar los props\r\n        this.props.datosConsulta(datos)\r\n\r\n        // Resetear la pantalla\r\n        e.currentTarget.reset();\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contenedor-form\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <form onSubmit={this.buscarClima}>\r\n                    <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                        <input ref={this.ciudad} id=\"ciudad\" type=\"text\" />\r\n                        <label htmlFor=\"ciudad\">Ciudad:</label>\r\n                    </div>\r\n                    <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                        <select ref={this.pais}>\r\n                            <option value=\"\" defaultValue>Elige un país</option>\r\n                            <option value=\"PA\">Panamá</option>\r\n                            <option value=\"CO\">Colombbia</option>\r\n                            <option value=\"CR\">Costa Rica</option>\r\n                            <option value=\"ES\">España</option>\r\n                            <option value=\"US\">USA</option>\r\n                            <option value=\"MX\">Mexico</option>\r\n                            <option value=\"PE\">Perú</option>\r\n                            <option value=\"AR\">Argentina</option>\r\n                        </select> \r\n                        <label htmlFor=\"pais\">País:</label>\r\n                    </div>  \r\n                    <div className=\"input-field col s12 m8 l4 offset-m2 buscador\">\r\n                        <input type=\"submit\" className=\"waves-effect waves-light btn-large yellow accent-4\" value=\"Buecar ...\"/>\r\n                    </div>                  \r\n                </form>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nFormulario.propTypes = {\r\n    datosConsulta: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default Formulario","import React from 'react'\r\n\r\nconst Error = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col s12 m6 offset-m3\">\r\n                <div className=\"card-panel red darken-4 error\">\r\n                    {props.mensaje}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class Clima extends Component {\r\n\r\n    muestraResultado = () => {\r\n\r\n        console.log(this.props.resultado);\r\n        const { name, weather, main } = this.props.resultado;\r\n\r\n        if(!name || !weather || !main) return null;\r\n\r\n        const kelvin = 273.15;\r\n        const urlIcon = `https://api.openweathermap.org/img/w/${weather[0].icon}.png`;\r\n        const alt = `Clima de ${name}`;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"resultado col  offset-m2 offser-l3\">\r\n                    <div className=\"card-panel light-blue align-center\">\r\n                        <span className=\"white-text\">\r\n                            <h2>Resultado Clima de: {name}</h2>\r\n                            <p className=\"temperatura\">\r\n                                Actual: {(main.temp - kelvin).toFixed(2)} &deg;C\r\n                                <img src={urlIcon} alt={alt} />\r\n                            </p>\r\n                            <p>Max. {(main.temp_max - kelvin).toFixed(2)}  &deg;C</p>\r\n                            <p>Min. {(main.temp_min - kelvin).toFixed(2)}  &deg;C</p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n          {this.muestraResultado()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nClima.propTypes = {\r\n    resultado: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        weather: PropTypes.array.isRequired,\r\n        main: PropTypes.object.isRequired,\r\n    })\r\n}\r\n\r\n\r\nexport default Clima","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Error from './components/Error';\nimport Clima from './components/Clima';\n\nclass App extends Component {\n\n  constructor() {\n     super();\n     this.state = {\n         error: false,\n         consulta: {},\n         resultado: {}\n     }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.consulta !== this.state.consulta) {\n        this.consultarApi();\n    }\n  }\n  \n  datosConsulta = datos => {\n    if(datos.pais === '' || datos.ciudad === '') {\n        this.setState({\n            error: true\n        })\n    } else {\n        this.setState({\n          error: false,\n          consulta: datos\n      })\n    }\n  }\n\n  consultarApi = () => {\n\n    const { pais, ciudad } = this.state.consulta;\n    const appId = '84fb1651d4750a0aeeb3d4b5204f447d';\n\n    // leer la url y agregar el API key\n    let url =  `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n\n    // Query con fetch api\n    fetch(url)\n    .then(respuesta => {\n        return respuesta.json();\n    })\n    .then(datos => {\n        this.setState({\n            resultado: datos\n        })\n    })\n    .catch(error => {\n        console.log(error);\n        this.setState({\n          error: true\n      })\n    })\n\n  }\n\n  render() {\n\n    const {error} = this.state,\n          {cod} = this.state.resultado;\n\n    let resultado;\n\n    if(error) {\n      resultado = <Error mensaje=\"Ambos campos son obligatorios\" />\n    } else if(cod !== 200 && cod !== undefined) {\n      resultado = <Error mensaje=\"Ciudad no encontrada\" />\n    } else {\n      if(this.state.resultado.name) {\n        resultado = <Clima resultado={this.state.resultado} />\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <Header titulo={'Clima React'}/>\n        <Formulario datosConsulta={this.datosConsulta}/>\n        {resultado}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}